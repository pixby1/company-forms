{"version":3,"file":"static/development/pages/company-contact/company.js","sources":["webpack:///webpack/bootstrap","webpack:///./assets/common-components/CompanyContactSidebar.js","webpack:///./assets/common-components/TopMenuBar.js","webpack:///./assets/common-components/componentHead.js","webpack:///./components/companyContactPage/AddCompanyForm.js","webpack:///./pages/company-contact/company.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"next/head\"","webpack:///external \"next/link\"","webpack:///external \"react\"","webpack:///external \"react-table\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"superagent\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from \"react\";\nimport Link from \"next/link\";\nimport \"../styles/companyContactSidebar.css\";\n\nimport { Menu } from \"semantic-ui-react\";\n\nexport class PageSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMenuItem: \"\"\n    };\n  }\n\n  handleMenuItemClick = clickedItem => e => {\n    this.setState({ activeMenuItem: clickedItem });\n  };\n\n  render() {\n    const { activeMenuItem } = this.state;\n    return (\n      <div className=\"pageSidebar\">\n        <Menu className=\"sidebarMenu\" vertical={true}>\n          <Link href=\"/company-contact/contact\">\n            <Menu.Item\n              name=\"contact\"\n              active={activeMenuItem === \"contact\"}\n              onClick={this.handleMenuItemClick(\"contact\")}\n            >\n              Contactos\n            </Menu.Item>\n          </Link>\n          <Link href=\"/company-contact/company\" prefetch>\n            <Menu.Item\n              onClick={this.handleMenuItemClick(\"company\")}\n              name=\"company\"\n              active={activeMenuItem === \"company\"}\n            >\n              Empresas\n            </Menu.Item>\n          </Link>\n          <Link href=\"/company-contact/category\">\n            <Menu.Item\n              onClick={this.handleMenuItemClick(\"category\")}\n              name=\"category\"\n              active={activeMenuItem === \"category\"}\n            >\n              Rubors\n            </Menu.Item>\n          </Link>\n        </Menu>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Link from \"next/link\";\n\nexport default class extends React.Component {\n  render() {\n    return (\n      <div className=\"topMenuBar\">\n        <Link href=\"/company-contact\">\n          <a>Emparesas & Contactos</a>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Head from \"next/head\";\n\nexport default props => (\n  <Head>\n    <title>{props.children}</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/semantic.min.css\" />\n    <script\n      src=\"https://code.jquery.com/jquery-3.3.1.min.js\"\n      integrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\"\n      crossorigin=\"anonymous\"\n    />\n    <script src=\"/static/semantic.min.js\" />\n    <script>const hostname = window.location.origin</script>\n  </Head>\n);\n","import React from \"react\";\nimport * as superagent from \"superagent\";\nimport { Form, Card, Dropdown, Button } from \"semantic-ui-react\";\nimport \"../../assets/styles/addCompany.css\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\nconst testProvinciaOptions = [\n  {\n    text: \"Test\",\n    value: \"test\",\n    key: 1\n  },\n  {\n    text: \"Test 2\",\n    value: \"test 2\",\n    key: 2\n  }\n];\n\nconst requiredFields = [\n  \"nombre\",\n  \"direccion\",\n  \"pais\",\n  \"provincia\",\n  \"ciudad\",\n  \"telefono\",\n  \"mail\",\n  \"cuit\",\n  \"web\"\n];\n\nconst otherFields = [\"cp\", \"descripcion\", \"codigo\", \"fax\"];\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formError: {\n        nombre: false,\n        direccion: false,\n        pais: false,\n        provincia: false,\n        ciudad: false,\n        telefono: false,\n        mail: false,\n        cuit: false,\n        web: false\n      },\n      isFormValid: false,\n      formDropdown: {\n        provincia: \"\",\n        ciudad: \"\"\n      },\n      editingCategory: false,\n      companyCategories: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.isAddingCompany) {\n      const formElements = $(\"form[name=newCompanyForm]\")[0].elements;\n\n      const editingCompanyInfo = this.props.companyInfo;\n\n      formElements.cuit.value = editingCompanyInfo.cuit;\n      formElements.direccion.value = editingCompanyInfo.direccion;\n      formElements.nombre.value = editingCompanyInfo.nombre;\n      formElements.mail.value = editingCompanyInfo.mail;\n      formElements.pais.value = editingCompanyInfo.pais;\n      formElements.telefono.value = editingCompanyInfo.telefono;\n      formElements.web.value = editingCompanyInfo.web;\n      formElements.fax.value = editingCompanyInfo.fax;\n      formElements.codigo.value = editingCompanyInfo.codigo;\n      formElements.cp.value = editingCompanyInfo.cp;\n\n      const { formDropdown } = this.state;\n      formDropdown.ciudad = editingCompanyInfo.ciudad;\n      formDropdown.provincia = editingCompanyInfo.provincia;\n\n      this.setState({ formDropdown });\n    }\n  }\n\n  validateForm = willSubmit => e => {\n    if (this.state.isFormValid && !willSubmit) {\n      return;\n    }\n\n    const { formError } = this.state;\n    let isFormValid = true;\n\n    const formData = {};\n    const newCompanyForm = $(\"form[name=newCompanyForm]\")[0];\n    const formEls = newCompanyForm.elements;\n\n    requiredFields.forEach(fieldName => {\n      const field = formEls[fieldName];\n      if (field) {\n        if (field.value.length === 0) {\n          formError[fieldName] = true;\n          isFormValid = false;\n        } else {\n          formError[fieldName] = false;\n          formData[fieldName] = field.value;\n        }\n      }\n    });\n\n    if (this.state.formDropdown.provincia.length === 0) {\n      formError.provincia = true;\n      isFormValid = false;\n    } else {\n      formData.provincia = this.state.formDropdown.provincia;\n    }\n\n    if (this.state.formError.ciudad.length === 0) {\n      formError.ciudad = true;\n      isFormValid = false;\n    } else {\n      formData.ciudad = this.state.formDropdown.ciudad;\n    }\n\n    this.setState({ isFormValid, formError });\n\n    if (isFormValid && willSubmit) {\n      otherFields.forEach(field => {\n        formData[field] = formEls[field].value;\n      });\n      this.submitForm(formData);\n    }\n  };\n\n  submitForm = formData => {\n    console.log(formData);\n    superagent\n      .post(`${hostname}/api/add-company`)\n      .send(formData)\n      .set(\"accept\", \"json\")\n      .end((err, res) => {\n        console.log(err, res);\n        if (!err) {\n          window.location.reload();\n        }\n      });\n  };\n\n  handleDropdownSelection = (e, data) => {\n    const { formDropdown, formError } = this.state;\n\n    formDropdown[data.name] = data.value;\n    formError[data.name] = false;\n\n    this.setState({ formDropdown, formError });\n  };\n\n  processCategoryData = categoryList => {\n    const processedCategoriasEmpresasList = [];\n    const categoryChildrenRecord = {};\n    console.log(categoryList, \"here\");\n    categoryList.forEach((category, index) => {\n      (function() {\n        if (category.nivel === 0) {\n          processedCategoriasEmpresasList.push(category);\n        } else {\n          const parentPos = findElementPos(\n            processedCategoriasEmpresasList,\n            category.id_padre\n          );\n          if (\n            categoryChildrenRecord[category.id_padre] !== 0 &&\n            !categoryChildrenRecord[category.id_padre]\n          ) {\n            categoryChildrenRecord[category.id_padre] = 0;\n          }\n\n          const parentsChildren = categoryChildrenRecord[category.id_padre];\n\n          processedCategoriasEmpresasList.splice(\n            1 + parentPos + parentsChildren,\n            0,\n            category\n          );\n\n          categoryChildrenRecord[category.id_padre] += 1;\n        }\n      })();\n    });\n\n    return processedCategoriasEmpresasList;\n  };\n\n  addCategory = category => {\n    const { companyCategories } = this.state;\n    if (companyCategories.indexOf(category._id) === -1) {\n      companyCategories.push(category._id);\n\n      this.setState({ companyCategories }, () => {\n        console.log(this.state.companyCategories);\n        if (category.nivel !== 0) {\n          console.log(this.props.categoryList);\n          const thisCategoryParent = this.props.categoryList.find(\n            a => a._id === category.id_padre\n          );\n          console.log(\"parent\", thisCategoryParent);\n          this.addCategory(thisCategoryParent);\n        }\n      });\n    }\n  };\n\n  deleteCategory = category => {\n    const { companyCategories } = this.state;\n    const processCompanyCategories = this.prepareCompanyCategories(\n      companyCategories\n    );\n    console.log(\"test here\", processCompanyCategories);\n    if (companyCategories.indexOf(category._id) > -1) {\n      const listOfCategoryID = processCompanyCategories.map(a => a._id);\n      const deleteCategoryPos = listOfCategoryID.indexOf(category._id);\n      let totalDeletedCategories = deleteCategoryPos + 1;\n      for (\n        let i = deleteCategoryPos + 1;\n        i < processCompanyCategories.length;\n        i++\n      ) {\n        console.log(processCompanyCategories[i]);\n        if (processCompanyCategories[i].nivel !== 0) {\n          totalDeletedCategories++;\n        } else if (processCompanyCategories[i].nivel === 0) {\n          i = processCompanyCategories.length;\n        }\n      }\n\n      console.log(deleteCategoryPos, totalDeletedCategories);\n\n      processCompanyCategories.splice(\n        deleteCategoryPos,\n        totalDeletedCategories - deleteCategoryPos\n      );\n\n      const newCompanyCategories = processCompanyCategories.map(a => a._id);\n\n      this.setState({ companyCategories: newCompanyCategories });\n    }\n  };\n\n  prepareCompanyCategories = rawCompanyCategories => {\n    const companyCategories = rawCompanyCategories.map(categoryID =>\n      this.props.categoryList.find(a => a._id === categoryID)\n    );\n\n    companyCategories.sort((a, b) => {\n      if (a.nivel === b.nivel) {\n        return b._id - a._id;\n      } else {\n        return a.nivel - b.nivel;\n      }\n    });\n\n    return this.processCategoryData(companyCategories);\n  };\n\n  render() {\n    const companyCategories = this.prepareCompanyCategories(\n      this.state.companyCategories\n    );\n    return (\n      <div className=\"newCompanyPage\">\n        <Card className=\"newCompany\">\n          <Card.Header>Editar Empresa</Card.Header>\n          <Card.Content>\n            <Form error={!this.state.isFormValid} name=\"newCompanyForm\">\n              <Form.Input\n                error={this.state.formError.nombre}\n                label=\"Denominación\"\n                name=\"nombre\"\n                onChange={this.validateForm()}\n              />\n              <p>\n                Una vez que guarde los cambios podrá asignar los Rubros a la\n                Empresa\n              </p>\n              <Button\n                className=\"toggleEditCategory\"\n                toggle={true}\n                active={this.state.editingCategory}\n                onClick={() => {\n                  this.setState({\n                    editingCategory: !this.state.editingCategory\n                  });\n                }}\n              >\n                Editar Rubros\n              </Button>\n              {this.props.isAddingCompany ||\n                (!this.state.editingCategory ? (\n                  <div>\n                    <Form.Group className=\"formGroup1\">\n                      <Form.Input\n                        error={this.state.formError.direccion}\n                        label=\"Dirección\"\n                        name=\"direccion\"\n                        onChange={this.validateForm()}\n                      />\n                      <Form.Field error={this.state.formError.provincia}>\n                        <label>Provincia</label>\n                        <Dropdown\n                          name=\"provincia\"\n                          fluid={true}\n                          labeled={true}\n                          options={testProvinciaOptions}\n                          selection={true}\n                          placeholder=\"Seleccionar Provincia\"\n                          onChange={this.handleDropdownSelection}\n                          value={this.state.formDropdown.provincia}\n                        />\n                      </Form.Field>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Field error={this.state.formError.ciudad}>\n                        <label>Ciudad</label>\n                        <Dropdown\n                          name=\"ciudad\"\n                          fluid={true}\n                          labeled={true}\n                          options={testProvinciaOptions}\n                          selection={true}\n                          placeholder=\"Ciudad\"\n                          onChange={this.handleDropdownSelection}\n                          value={this.state.formDropdown.ciudad}\n                        />\n                      </Form.Field>\n                      <Form.Input label=\"CP\" name=\"cp\" />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Input\n                        label=\"Pais\"\n                        name=\"pais\"\n                        onChange={this.validateForm()}\n                      />\n                      <Form.Input label=\"Código\" name=\"codigo\" />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Input\n                        error={this.state.formError.telefono}\n                        label=\"Teléfono\"\n                        name=\"telefono\"\n                        onChange={this.validateForm()}\n                      />\n                      <Form.Input label=\"Fax\" name=\"fax\" />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Input\n                        error={this.state.formError.mail}\n                        label=\"Mail\"\n                        name=\"mail\"\n                        type=\"email\"\n                        onChange={this.validateForm()}\n                      />\n                      <Form.Input\n                        error={this.state.formError.web}\n                        label=\"Web\"\n                        name=\"web\"\n                        onChange={this.validateForm()}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Input\n                        error={this.state.formError.cuit}\n                        label=\"CUIT\"\n                        name=\"cuit\"\n                        onChange={this.validateForm()}\n                      />\n                    </Form.Group>\n                    <Form.TextArea label=\"Observaciones\" name=\"descripcion\" />\n                  </div>\n                ) : (\n                  <div className=\"editCategoryForm\">\n                    <ReactTable\n                      className=\"-striped -highlight\"\n                      data={companyCategories}\n                      defaultPageSize={100}\n                      style={{ height: \"400px\" }}\n                      showPageSizeOptions={false}\n                      columns={[\n                        {\n                          Header: \"Rubro\",\n                          accessor: \"nombre\",\n                          Cell: row => {\n                            const thisRowData = row.original;\n                            return (\n                              <div>\n                                <div\n                                  className=\"familyTreeIndicator\"\n                                  style={{\n                                    width:\n                                      thisRowData.nivel > 0 ? 30 + \"px\" : \"0\",\n                                    height:\n                                      thisRowData.nivel === 0 ? \"0\" : \"15px\",\n                                    marginLeft:\n                                      5 + thisRowData.nivel * 30 + \"px\"\n                                  }}\n                                />\n                                <div>{row.value}</div>\n                              </div>\n                            );\n                          }\n                        },\n                        {\n                          Header: \"Actions\",\n                          width: 150,\n                          Cell: row => {\n                            const thisRowData = row.original;\n                            return (\n                              <div>\n                                <Button\n                                  icon=\"delete\"\n                                  onClick={() =>\n                                    this.deleteCategory(thisRowData)\n                                  }\n                                  color=\"red\"\n                                />\n                              </div>\n                            );\n                          }\n                        }\n                      ]}\n                    />\n                    <p>Select Category</p>\n                    <ReactTable\n                      className=\"-striped -highlight\"\n                      data={this.processCategoryData(this.props.categoryList)}\n                      defaultPageSize={100}\n                      style={{ height: \"400px\" }}\n                      showPageSizeOptions={false}\n                      columns={[\n                        {\n                          Header: \"Rubro\",\n                          accessor: \"nombre\",\n                          Cell: row => {\n                            const thisRowData = row.original;\n                            return (\n                              <div>\n                                <div\n                                  className=\"familyTreeIndicator\"\n                                  style={{\n                                    width:\n                                      thisRowData.nivel > 0 ? 30 + \"px\" : \"0\",\n                                    height:\n                                      thisRowData.nivel === 0 ? \"0\" : \"15px\",\n                                    marginLeft:\n                                      5 + thisRowData.nivel * 30 + \"px\"\n                                  }}\n                                />\n                                <div>{row.value}</div>\n                              </div>\n                            );\n                          }\n                        },\n                        {\n                          Header: \"Actions\",\n                          width: 150,\n                          Cell: row => {\n                            const thisRowData = row.original;\n                            return (\n                              <div>\n                                <Button\n                                  icon=\"add\"\n                                  onClick={() => this.addCategory(thisRowData)}\n                                  color=\"blue\"\n                                />\n                              </div>\n                            );\n                          }\n                        }\n                      ]}\n                    />\n                  </div>\n                ))}\n              <Form.Field>\n                <Button onClick={this.validateForm(true)} color=\"green\">\n                  Submit\n                </Button>\n                <Button\n                  type=\"button\"\n                  onClick={this.props.cancelAddingCompany}\n                  color=\"red\"\n                >\n                  Cancel\n                </Button>\n              </Form.Field>\n            </Form>\n          </Card.Content>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst findElementPos = (array, elID) => {\n  let pos = -1;\n  array.forEach((el, index) => {\n    if (pos !== -1) {\n      return;\n    }\n\n    if (el._id.toString() === elID) {\n      pos = index;\n    }\n  });\n\n  return pos;\n};\n","import React from \"react\";\nimport ReactTable from \"react-table\";\nimport Head from \"../../assets/common-components/componentHead\";\nimport TopMenuBar from \"../../assets/common-components/TopMenuBar\";\nimport { PageSidebar } from \"../../assets/common-components/CompanyContactSidebar\";\nimport \"react-table/react-table.css\";\nimport { Button, Modal } from \"semantic-ui-react\";\nimport AddCompanyForm from \"../../components/companyContactPage/AddCompanyForm\";\nimport * as superagent from \"superagent\";\n\nexport default class extends React.Component {\n  static async getInitialProps({ req }) {\n    if (req) {\n      const db = req.db;\n      const companyList = await db\n        .collection(\"Company\")\n        .find()\n        .toArray();\n\n      const categoriasEmpresasList = await db\n        .collection(\"categorias_empresas\")\n        .find()\n        .toArray();\n\n      categoriasEmpresasList.sort((a, b) => {\n        if (a.nivel === b.nivel) {\n          return a._id - b._id;\n        } else {\n          return a.nivel - b.nivel;\n        }\n      });\n      return { companyList, categoriasEmpresasList };\n    }\n\n    const { companyList } = await superagent\n      .get(`${hostname}/api/getCompanyList`)\n      .then(res => res.body);\n\n    const { categoriasEmpresasList } = await superagent\n      .get(\"/api/getCategoriasEmpresas\")\n      .then(res => res.body);\n    return { companyList, categoriasEmpresasList };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAddingCompany: false,\n      isEditingCompany: false,\n      editingCompany: \"\"\n    };\n  }\n\n  startAddingCompany = () => {\n    this.setState({ isAddingCompany: true });\n  };\n\n  startEditCompany = (e, data) => {\n    this.setState({ isEditingCompany: true, editingCompany: data.value });\n  };\n\n  cancelAddingCompany = () => {\n    this.setState({ isAddingCompany: false });\n  };\n\n  render() {\n    const { isAddingCompany, isEditingCompany } = this.state;\n\n    console.log(this.props);\n    return (\n      <div className=\"companyContactPage\">\n        <Modal\n          basic\n          style={{ padding: \"10px\" }}\n          open={isAddingCompany || isEditingCompany ? true : false}\n        >\n          <AddCompanyForm\n            categoryList={this.props.categoriasEmpresasList}\n            isAddingCompany={isAddingCompany}\n            cancelAddingCompany={this.cancelAddingCompany}\n            companyInfo={this.props.companyList.find(\n              a => a._id === this.state.editingCompany\n            )}\n          />\n        </Modal>\n        <Head>Empresas</Head>\n        <TopMenuBar />\n        <PageSidebar />\n        <div className=\"companyManagement\">\n          <div className=\"actionButtons\">\n            <Button color=\"blue\" size=\"tiny\">\n              Eliminar\n            </Button>\n            <Button color=\"blue\" size=\"tiny\">\n              Nuevo Contacto\n            </Button>\n            <Button onClick={this.startAddingCompany} color=\"blue\" size=\"tiny\">\n              Nuevo Empresa\n            </Button>\n          </div>\n          <ReactTable\n            className=\"-striped -highlight\"\n            data={this.props.companyList}\n            pageSize={5}\n            columns={[\n              { Header: \"Nombre\", accessor: \"nombre\" },\n              { Header: \"Tel\", accessor: \"telefono\" },\n              { Header: \"Mail\", accessor: \"mail\" },\n              {\n                Header: \"Action\",\n                accessor: \"1\",\n                Cell: row => (\n                  <div className=\"companyListActions\">\n                    <Button\n                      name=\"edit\"\n                      icon=\"edit\"\n                      value={row.original._id}\n                      onClick={this.startEditCompany}\n                    />\n                  </div>\n                )\n              }\n            ]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"next/head\");","module.exports = require(\"next/link\");","module.exports = require(\"react\");","module.exports = require(\"react-table\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"superagent\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAOA;AACA;AAAA;AAAA;AACA;AAFA;AACA;AANA;AACA;AADA;AAFA;AAKA;AACA;AAPA;AAAA;AAAA;AAYA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAQA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAQA;AAAA;AAEA;AACA;AACA;AAHA;AAWA;AA/CA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAKA;;;;AATA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AAYA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAiDA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AA/CA;AACA;AAlDA;AAmGA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA/GA;AAgHA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAxHA;AA0HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AA5JA;AA6JA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA/KA;AAgLA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAnNA;AAqNA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAjOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAlBA;AAFA;AAsBA;AACA;;;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAiBA;AACA;AAEA;AAAA;AAAA;AACA;AACA;;;AAqLA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AARA;AAeA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAaA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AALA;AAFA;AAcA;AArBA;AAwBA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAGA;AALA;AASA;AAhBA;AA9BA;AAoDA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AALA;AAFA;AAcA;AArBA;AAwBA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAHA;AAOA;AAdA;AA9BA;AAmDA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAaA;;;;AA/cA;AACA;;;AAidA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AAAA;;;;;AACA;;AACA;AACA;;AADA;;AAKA;AACA;;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAEA;AAAA;AACA;;;AAHA;;AAIA;AAEA;AAAA;AACA;;;AAHA;AAGA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAUA;AAAA;AAAA;AACA;AACA;AAZA;AAcA;AAAA;AAAA;AAAA;AACA;AACA;AAhBA;AAkBA;AAAA;AAAA;AACA;AACA;AAlBA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AAaA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAAA;AALA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAFA;AAHA;AARA;AA2BA;;;;AArHA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACXA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}